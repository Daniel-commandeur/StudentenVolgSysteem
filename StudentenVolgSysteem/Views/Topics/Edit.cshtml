@model StudentenVolgSysteem.Models.CUTopicModel

@{
    ViewBag.Title = "Edit";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>TopicModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TopicId)

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Niveau, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Niveau, new SelectList(Model.CUNiveaus, "NiveauId", "Niveau", Model.Niveau), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Niveau, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Duur, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Duur, new SelectList(Model.CUTijdsDuren, "TijdsDuurId", "Eenheid", Model.Duur))
            @Html.ValidationMessageFor(model => model.Duur, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Werkvorm, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Werkvorm, new SelectList(Model.CUwerkvormen, "WerkvormId", "Werkvorm", Model.Werkvorm), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Werkvorm, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Leerdoel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Leerdoel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Leerdoel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Certificeringen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CertificeringIds, new MultiSelectList(Model.CUCertificeringenInfras, "CertificeringenInfraId", "Certificering", Model.Certificeringen.Select(c => c.CertificeringenInfraId)), new { @id = "certSelect", @multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Certificeringen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Certificeringen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CertificeringIds, new MultiSelectList(Model.CUCertificeringenInfras, "CertificeringenInfraId", "Certificering", Model.Certificeringen.Select(c => c.CertificeringenInfraId)), new { @id = "certSelect", @multiple = "multiple" })
            @Html.ValidationMessageFor(model => model.Certificeringen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Inhoud, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Inhoud, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Inhoud, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script src="/Scripts/jquery-3.3.1.js"></script>*@
<script>
    $(document).ready(function () {
        //console.log("**************Test Multiselect*************")
        $('#certSelect').multiselect({
            includeSelectAllOption: true,
            maxHeight: 300
        });
    });
</script>
